monthly_dates <- format(monthly_range, "%d")       #31
monthly_days <- format(monthly_range, "%a")     #Mon
monthly_weeks <- strftime(monthly_range,format="%W") #1
monthly_months <- format(monthly_range, "%B")   #January
monthly_years <- format(monthly_range, "%Y")    #2015
monthly_wknds <- ifelse(monthly_range$wday %in% c(6,0), TRUE, FALSE)  #weekends
monthly_df <- data.frame(monthly_dates,
monthly_days,
monthly_weeks,
monthly_months,
monthly_years,
monthly_wknds)
colnames(monthly_df) <- gsub(".*\\_","",colnames(monthly_df))
monthly_df
dcast(monthly_df, years + months ~ dates, value.var="days")
monthly_df$int <- interaction(monthly$months, monthly$years, sep=" ")
monthly_df$int <- interaction(monthly_df$months, monthly_df$years, sep=" ")
monthly_df$int
(monthly$date)$mon
(monthly_df$date)$mon
(monthly_df$date)
(monthly_df$dates)$mon
monthly_df$dates
monthly$months
monthly_df$months
levels(monthly_df$months)
months[1:12]
factor(monthly_df$months, levels = month.name)
month.name
day.name
factor(monthly_df$months, levels = month.name)
monthly_range <- as.POSIXlt(seq(monthly_start, monthly_end, "days")) #start on a Jul 01, end on Dec 31 (multiple of 6 months)
monthly_dates <- format(monthly_range, "%d")       #31
monthly_days <- format(monthly_range, "%a")     #Mon
monthly_weeks <- strftime(monthly_range,format="%W") #1
monthly_months <- format(monthly_range, "%B")   #January
monthly_months <- factor(monthly_df$months, levels = month.name)
monthly_years <- format(monthly_range, "%Y")    #2015
monthly_wknds <- ifelse(monthly_range$wday %in% c(6,0), TRUE, FALSE)  #weekends
monthly_df <- data.frame(monthly_dates,
monthly_days,
monthly_weeks,
monthly_months,
monthly_years,
monthly_wknds)
colnames(monthly_df) <- gsub(".*\\_","",colnames(monthly_df))
monthly_df
monthly_df$int <- interaction(monthly_df$months, monthly_df$years, sep=" ")
dfcast <- dcast(monthly_df, int + years + months ~ dates, value.var="days")
library(reshape2)
monthly_df$int <- interaction(monthly_df$months, monthly_df$years, sep=" ")
dfcast <- dcast(monthly_df, int + years + months ~ dates, value.var="days")
dfcast
monthly_months <- factor(monthly_df$months, levels = month.name)
monthly_df$int <- interaction(monthly_df$months, monthly_df$years, sep=" ")
as.numeric(monthly$months)
as.numeric(monthly_df$months)
monthly_sort <- as.numeric(monthly_df$months)
dfcast <- dcast(monthly_df, int + years + months +sort ~ dates, value.var="days")
dfcast <- dcast(monthly_df, int + years + months + sort ~ dates, value.var="days")
monthly_df
?dcast
dfcast <- dcast(dfcar, int + years + months + sort ~ ds, value.var="days")
monthly_months
monthly_df
monthly_df %>% group_by(int) %>%
summarize(days = days)
dfcar <- monthly_df
dfcar$days <- paste(dfcar$dates, dfcar$days, sep=" ") #31.01 Mon
dfcar <- apply(dfcar,1:2, function(x) as.character(x))
dfcar <- as.data.frame(dfcar)
dfcar$sort <- ifelse(dfcar$months=="January", 1,
ifelse(df$months=="February", 2,
ifelse(df$months=="March", 3,
ifelse(df$months=="April", 4,
ifelse(df$months=="May", 5,
ifelse(df$months=="July", 7,
ifelse(df$months=="August", 8,
ifelse(df$months=="September", 9,
ifelse(df$months=="June", 6,
ifelse(df$months=="October", 10,
ifelse(df$months=="November", 11, 12)))))))))))
dfcar$sort <- ifelse(dfcar$months=="January", 1,
ifelse(df$months=="February", 2,
ifelse(df$months=="March", 3,
ifelse(df$months=="April", 4,
ifelse(df$months=="May", 5,
ifelse(df$months=="June", 6,
ifelse(df$months=="July", 7,
ifelse(df$months=="August", 8,
ifelse(df$months=="September", 9,
ifelse(df$months=="October", 10,
ifelse(df$months=="November", 11, 12)))))))))))
dfcar$sort <- monthly_sort
dfcast <- dcast(dfcar, int + years + months + sort ~ ds, value.var="days")
dfcast <- dcast(dfcar, int + years + months + sort ~ dates, value.var="days")
dfcast
dfcast <- dcast(dfcar, int + years + months + sort ~ days, value.var="days")
dfcast
dfcast <- dcast(dfcar, int + years + months + sort ~ dates, value.var="days")
dfcast
dfcast <- dcast(dfcar, . ~ int, value.var="days")
dfcast
dfcast <- dcast(dfcar, sort ~ int, value.var="days")
dfcast
invisible(Sys.setlocale("LC_ALL","English"))
date <- as.POSIXlt(seq(as.Date("2015/07/01"), as.Date("2016/12/31"), "days")) #start on a Jul 01, end on Dec 31 (multiple of 6 months)
dates <- format(date, "%d.%m") #31.01
ds <- format(date, "%d")       #31
days <- format(date, "%A")     #Monday
weeks <- strftime(date,format="%W") #1
months <- format(date, "%B")   #January
years <- format(date, "%Y")    #2015
df <- data.frame(date, dates, ds, days, weeks, months, years)
#dcast looses date format --> create dfcar with character entries of df
dfcar <- df
dfcar$days <- format(dfcar$date, "%a") #Mon
dfcar$days <- paste(dfcar$ds, dfcar$days, sep=" ") #31.01 Mon
dfcar <- apply(dfcar,1:2, function(x) as.character(x))
dfcar <- as.data.frame(dfcar)
dfcar
dfcar$sort <- ifelse(dfcar$months=="January", 1,
ifelse(df$months=="February", 2,
ifelse(df$months=="March", 3,
ifelse(df$months=="April", 4,
ifelse(df$months=="May", 5,
ifelse(df$months=="June", 6,
ifelse(df$months=="July", 7,
ifelse(df$months=="August", 8,
ifelse(df$months=="September", 9,
ifelse(df$months=="October", 10,
ifelse(df$months=="November", 11, 12)))))))))))
dfcar <- df
dfcar$days <- format(dfcar$date, "%a") #Mon
dfcar$days <- paste(dfcar$ds, dfcar$days, sep=" ") #31.01 Mon
dfcar <- apply(dfcar,1:2, function(x) as.character(x))
dfcar <- as.data.frame(dfcar)
#dcast will sort by alphabet --> create sort variable for later sorting
#http://seananderson.ca/2013/10/19/reshape.html
dfcar$sort <- ifelse(dfcar$months=="January", 1,
ifelse(df$months=="February", 2,
ifelse(df$months=="March", 3,
ifelse(df$months=="April", 4,
ifelse(df$months=="May", 5,
ifelse(df$months=="June", 6,
ifelse(df$months=="July", 7,
ifelse(df$months=="August", 8,
ifelse(df$months=="September", 9,
ifelse(df$months=="October", 10,
ifelse(df$months=="November", 11, 12)))))))))))
dfcar$int <- interaction(df$months, df$years, sep=" ")
dfcast <- dcast(dfcar, int + years + months + sort ~ ds, value.var="days")
dfcast <- dfcast[order(dfcast$years, dfcast$sort),] #sort by m
dfcast
dfcast <- dfcast[order(dfcast$years, dfcast$sort),] #sort by month instead of by alphabet
dfcast
rownames(dfcast) <- dfcast$int
drops <- colnames(dfcast) %in% c("int", "years", "months", "sort")
dfcast <- dfcast[,!drops]
overview <- t(dfcast)
overview <- as.data.frame(overview)
overview
dfcast <- dcast(monthly_df, int + years + months + sort ~ dates, value.var="days")
dcast(monthly_df, int + years + months + sort ~ dates, value.var="days")
monthly_months
monthly_df$months <- factor(monthly_df$months, levels = month.name)
monthly_sort <- as.numeric(monthly_df$months)
monthly_df$int <- interaction(monthly_df$months, monthly_df$years, sep=" ")
monthly_df
monthly_df$months <- factor(monthly_df$months, levels = month.name)
monthly_df$sort <- as.numeric(monthly_df$months)
monthly_df$int <- interaction(monthly_df$months, monthly_df$years, sep=" ")
monthly_range <- as.POSIXlt(seq(monthly_start, monthly_end, "days")) #start on a Jul 01, end on Dec 31 (multiple of 6 months)
monthly_dates <- format(monthly_range, "%d")       #31
monthly_days <- format(monthly_range, "%a")     #Mon
monthly_weeks <- strftime(monthly_range,format="%W") #1
monthly_months <- format(monthly_range, "%B")   #January
monthly_years <- format(monthly_range, "%Y")    #2015
monthly_wknds <- ifelse(monthly_range$wday %in% c(6,0), TRUE, FALSE)  #weekends
monthly_df <- data.frame(monthly_dates,
monthly_days,
monthly_weeks,
monthly_months,
monthly_years,
monthly_wknds)
colnames(monthly_df) <- gsub(".*\\_","",colnames(monthly_df))
################################################################################
## Calculating the dates for the monthly overview ##############################
################################################################################
#Sort factor levels of month by month (not alphabetical)
monthly_df$months <- factor(monthly_df$months, levels = month.name)
monthly_df$sort <- as.numeric(monthly_df$months)
monthly_df$int <- interaction(monthly_df$months, monthly_df$years, sep=" ")
monthly_df
dcast(monthly_df, int + years + months + sort ~ dates, value.var="days")
dcast(monthly_df, int + years + months + sort ~ dates, value.var="days")
monthly_df$dates
monthly_df$days
inherit(monthly_df$days, "POSIXlt")
??inherit
inherits(monthly_df$days, "POSIXlt")
mode(monthly_df$days)
as.character(monthly_df$days)
monthly_df$days <- as.character(monthly_df$days)
dcast(monthly_df, int + years + months + sort ~ dates, value.var="days")
monthly_range <- as.POSIXlt(seq(monthly_start, monthly_end, "days")) #start on a Jul 01, end on Dec 31 (multiple of 6 months)
monthly_dates <- format(monthly_range, "%d")       #31
monthly_days <- format(monthly_range, "%a")     #Mon
monthly_weeks <- strftime(monthly_range,format="%W") #1
monthly_months <- format(monthly_range, "%B")   #January
monthly_years <- format(monthly_range, "%Y")    #2015
monthly_wknds <- ifelse(monthly_range$wday %in% c(6,0), TRUE, FALSE)  #weekends
monthly_df <- data.frame(monthly_dates,
monthly_days,
monthly_weeks,
monthly_months,
monthly_years,
monthly_wknds)
colnames(monthly_df) <- gsub(".*\\_","",colnames(monthly_df))
monthly_df
monthly_df
dcast(monthly_df, dates + int ~ days)
monthly_range <- as.POSIXlt(seq(monthly_start, monthly_end, "days")) #start on a Jul 01, end on Dec 31 (multiple of 6 months)
monthly_dates <- format(monthly_range, "%d")       #31
monthly_days <- format(monthly_range, "%a")     #Mon
monthly_weeks <- strftime(monthly_range,format="%W") #1
monthly_months <- format(monthly_range, "%B")   #January
monthly_years <- format(monthly_range, "%Y")    #2015
monthly_wknds <- ifelse(monthly_range$wday %in% c(6,0), TRUE, FALSE)  #weekends
monthly_df <- data.frame(monthly_dates,
monthly_days,
monthly_weeks,
monthly_months,
monthly_years,
monthly_wknds)
colnames(monthly_df) <- gsub(".*\\_","",colnames(monthly_df))
dcast(monthly_df, dates + int ~ days)
monthly_df$int <- interaction(monthly_df$months, monthly_df$years, sep=" ")
dcast(monthly_df, dates + int ~ days)
dcast(monthly_df, dates + int ~ days, value.vars="days")
monthly_df
dcast(monthly_df, . ~ int)
dcast(monthly_df, . ~ int, value.var=dates)
dcast(monthly_df, . ~ int, value.var=days)
dcast(monthly_df, . ~ int)
dcast(monthly_df, . ~ int +sort)
monthly_df$sort <- as.numeric(monthly_df$months)
dcast(monthly_df, . ~ int +sort)
dcast(monthly_df, sort ~ int )
dcast(monthly_df, dates ~ int )
dcast(monthly_df, dates ~ int, value.var="days" )
dcast(monthly_df, dates ~ int, value.var="days" )
bla <- dcast(monthly_df, dates ~ int, value.var="days" )
dublicate(int)
duplicated(int)
duplicated(monthly_dfint)
duplicated(monthly_df$int)
monthly_df$int
format(monthly_range, "%d.%b.%Y")
format(monthly_range, "%d.%m.%Y")
monthly_range <- as.POSIXlt(seq(monthly_start, monthly_end, "days")) #start on a Jul 01, end on Dec 31 (multiple of 6 months)
monthly_fulldate <- format(monthly_range, "%d.%m.%Y")
monthly_dates <- format(monthly_range, "%d")       #31
monthly_days <- format(monthly_range, "%a")     #Mon
monthly_weeks <- strftime(monthly_range,format="%W") #1
monthly_months <- format(monthly_range, "%B")   #January
monthly_years <- format(monthly_range, "%Y")    #2015
monthly_wknds <- ifelse(monthly_range$wday %in% c(6,0), TRUE, FALSE)  #weekends
monthly_df <- data.frame(monthly_fulldate,
monthly_dates,
monthly_days,
monthly_weeks,
monthly_months,
monthly_years,
monthly_wknds)
colnames(monthly_df) <- gsub(".*\\_","",colnames(monthly_df))
bla <- dcast(monthly_df, dates ~ full_date, value.var="days" )
bla <- dcast(monthly_df, dates ~ fulldate, value.var="days" )
bla
monthly_df$int <- interaction(monthly_df$months, monthly_df$years, sep=" ")
bla <- dcast(monthly_df, dates ~ int, value.var="days" )
bla
bla <- dcast(monthly_df, fulldate ~ int, value.var="days" )
bla
bla <- dcast(monthly_df, days + dates ~ int, value.var="days" )
bla
bla <- dcast(monthly_df, . ~ int, value.var="fulldates" )
monthly_fulldates <- format(monthly_range, "%d.%m.%Y")
colnames(monthly_df) <- gsub(".*\\_","",colnames(monthly_df))
dcast(monthly_df, . ~ int, value.var="fulldates" )
monthly_fulldates <- format(monthly_range, "%d.%m.%Y")
monthly_dates <- format(monthly_range, "%d")       #31
monthly_days <- format(monthly_range, "%a")     #Mon
monthly_weeks <- strftime(monthly_range,format="%W") #1
monthly_months <- format(monthly_range, "%B")   #January
monthly_years <- format(monthly_range, "%Y")    #2015
monthly_wknds <- ifelse(monthly_range$wday %in% c(6,0), TRUE, FALSE)  #weekends
monthly_df <- data.frame(monthly_fulldate,
monthly_dates,
monthly_days,
monthly_weeks,
monthly_months,
monthly_years,
monthly_wknds)
colnames(monthly_df) <- gsub(".*\\_","",colnames(monthly_df))
monthly_range <- as.POSIXlt(seq(monthly_start, monthly_end, "days")) #start on a Jul 01, end on Dec 31 (multiple of 6 months)
monthly_fulldates <- format(monthly_range, "%d.%m.%Y")
monthly_dates <- format(monthly_range, "%d")       #31
monthly_days <- format(monthly_range, "%a")     #Mon
monthly_weeks <- strftime(monthly_range,format="%W") #1
monthly_months <- format(monthly_range, "%B")   #January
monthly_years <- format(monthly_range, "%Y")    #2015
monthly_wknds <- ifelse(monthly_range$wday %in% c(6,0), TRUE, FALSE)  #weekends
monthly_df <- data.frame(monthly_fulldate,
monthly_dates,
monthly_days,
monthly_weeks,
monthly_months,
monthly_years,
monthly_wknds)
colnames(monthly_df) <- gsub(".*\\_","",colnames(monthly_df))
monthly_df <- data.frame(monthly_fulldates,
monthly_dates,
monthly_days,
monthly_weeks,
monthly_months,
monthly_years,
monthly_wknds)
colnames(monthly_df) <- gsub(".*\\_","",colnames(monthly_df))
bla <- dcast(monthly_df, . ~ int, value.var="fulldates" )
monthly_df$int <- interaction(monthly_df$months, monthly_df$years, sep=" ")
bla <- dcast(monthly_df, . ~ int, value.var="fulldates" )
bla
int
bla <- dcast(monthly_df, days+dates ~ int, value.var="fulldates" )
bla
bla <- dcast(monthly_df, days ~ int, value.var="fulldates" )
bla
bla <- dcast(monthly_df, dates ~ int, value.var="fulldates" )
bla
monthly_fulldates
bla <- dcast(monthly_df, dates ~ int, value.var="days" )
dcast(monthly_df, dates ~ int, value.var="days" )
dcast(monthly_df, dates ~ int, value.var="dates" )
?dcast
monthly_df$dates
monthly_df$days
bla <- dcast(monthly_df, dates ~ int, value.var="days" )
bla
bla <- dcast(monthly_df, dates ~ int, value.var=c("date", "days" ))
bla <- dcast(monthly_df, dates ~ int, value.vars=c("date", "days" ))
bla <- dcast(monthly_df, dates ~ int, value.var=c("date"))
bla <- dcast(monthly_df, dates ~ int, value.var="date")
bla <- dcast(monthly_df, dates ~ int, value.var="dates")
bla
dcast(monthly_df, dates ~ int, value.var="dates",
fun.aggregate=function(x) paste(x, collapse = ", "))
bla <- dcast(monthly_df, dates ~ int, value.var="dates, days",
fun.aggregate=function(x) paste(x, collapse = ", "))
bla <- dcast(monthly_df, dates ~ int, value.var="days",
fun.aggregate=function(x) paste(x, collapse = ", "))
bla
start <- "2015/07/01" # date at which the agenda should start (can be any date)
monthly_pages <- 3 # number of pages for the monthly overview (1 page = 6 months)
################################################################################
## Set-Up, packages, and custom functions ######################################
################################################################################
invisible(Sys.setlocale("LC_ALL","English"))
library(dplyr)
nextbestmonday <- function(start)   { #start must be POSIXlt
start -
ifelse(start$wday == 1, 0,
ifelse(start$wday == 2, 1,
ifelse(start$wday == 3, 2,
ifelse(start$wday == 4, 3,
ifelse(start$wday == 5, 4,
ifelse(start$wday == 6, 5,
ifelse(start$wday == 0, 6)
)
)
)
)
)
) * 86401 + 2
}
nextbestsunday <- function(monthly_end)   { #monthly_end must be POSIXlt
monthly_end +
ifelse(monthly_end$wday == 0, 0,
ifelse(monthly_end$wday == 1, 6,
ifelse(monthly_end$wday == 2, 5,
ifelse(monthly_end$wday == 3, 4,
ifelse(monthly_end$wday == 4, 3,
ifelse(monthly_end$wday == 5, 2,
ifelse(monthly_end$wday == 6, 1)
)
)
)
)
)
) * 86401 - 1
}
################################################################################
## Calculating start and end dates #############################################
################################################################################
# Convert start into date and extract year and month
start <- as.POSIXlt(start)
start_year <- start$year + 1900
start_month <- start$mon + 1
# Find the first and last date for the monthly overview
monthly_start <- paste(start_year, "/", start_month, "/", "01", sep="")
monthly_start <- as.POSIXlt(monthly_start)
monthly_length <- paste(monthly_pages*6, "months")
monthly_end <- seq.Date(as.Date(monthly_start),
length=2,
by=monthly_length
)[2] - 1
monthly_end <- as.POSIXlt(monthly_end)
# Find first and last date for the weekly overview
weekly_start <- nextbestmonday(start)
weekly_end <- nextbestsunday(monthly_end) #weekly_end  # has to be a Sunday
################################################################################
## Calculating the dates for the weekly overview ###############################
################################################################################
weekly_range <- as.POSIXlt(seq(weekly_start, weekly_end, "days"))
weekly_dates <- format(weekly_range, "%d.%m") #31.01
weekly_days <- format(weekly_range, "%A")     #Monday
weekly_weeks <- strftime(weekly_range,format="%W") #1
weekly_months <- format(weekly_range, "%B")   #January
weekly_years <- format(weekly_range, "%Y")    #2015
weekly_wknds  <- ifelse(weekly_range$wday %in% c(6,0), TRUE, FALSE)  #weekends
weekly_df <- data.frame(weekly_dates,
weekly_days,
weekly_weeks,
weekly_months,
weekly_years,
weekly_wknds)
# remove weekly_ from column names
colnames(weekly_df) <- gsub(".*\\_","",colnames(weekly_df))
################################################################################
## Calculating the dates for the monthly overview ##############################
################################################################################
monthly_range <- as.POSIXlt(seq(monthly_start, monthly_end, "days")) #start on a Jul 01, end on Dec 31 (multiple of 6 months)
monthly_fulldates <- format(monthly_range, "%d.%m.%Y")
monthly_dates <- format(monthly_range, "%d")       #31
monthly_days <- format(monthly_range, "%a")     #Mon
monthly_weeks <- strftime(monthly_range,format="%W") #1
monthly_months <- format(monthly_range, "%B")   #January
monthly_years <- format(monthly_range, "%Y")    #2015
monthly_wknds <- ifelse(monthly_range$wday %in% c(6,0), TRUE, FALSE)  #weekends
monthly_df <- data.frame(monthly_fulldates,
monthly_dates,
monthly_days,
monthly_weeks,
monthly_months,
monthly_years,
monthly_wknds)
colnames(monthly_df) <- gsub(".*\\_","",colnames(monthly_df))
View(monthly_df)
start <- "2015/07/01" # date at which the agenda should start (can be any date)
monthly_pages <- 3 # number of pages for the monthly overview (1 page = 6 months)
invisible(Sys.setlocale("LC_ALL","English"))
start <- as.Date(start)
start
weekdays(start)
weekdays(start) == "Monday"
as.numeric(weekdays(start))
weekdays(start)
day.name(start)
day.names(start)
start <- "2015/07/01" # date at which the agenda should start (can be any date)
start <- chron(start)
start <- "01.07.2015" # date at which the agenda should start (can be any date)
start <- chron(start)
start <- chron(start, format="d.m.y")
start
start <- chron(start, format="d.m.y")
start
start$wday
start
mode(start)
weekdays(start)
as.numeric(start)
nextbestmonday <- function(start)   { #start must be POSIXlt
start -
ifelse(weekdays(start) == "Monday", 0,
ifelse(weekdays(start) == "Tuesday", 1,
ifelse(weekdays(start) == "Wednesday", 2,
ifelse(weekdays(start) == "Thursday", 3,
ifelse(weekdays(start) == "Friday", 4,
ifelse(weekdays(start) == "Saturday", 5,
ifelse(weekdays(start) == "Sunday", 6)
)
)
)
)
)
)
}
start <- chron(start, format="d.m.y")
start_year <- as.character(format(start, "y"))
start_year <- format(start, "%Y")
start_year <- format(start, "y")
start_year <- chron(start, "y")
start_year <- chron(start, format="y")
start_year
start_year <- chron(start, format="y")
chron(start, format="y")
chron(start, format="d.m.y", out.format="y")
chron("01.07.2015", format="d.m.y", out.format="y")
start <- chron(start, format="d.m.y")
start
start
