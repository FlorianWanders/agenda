{
    "contents" : "%fontawesomeupdated.sty and fontawesome.otf must be in same folder \n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%%%%% Packages and Settings %%%%%%%%%%%%%%%%%%%%%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\\documentclass[11pt,a4paper]{book} %must be first line of code\n\\pagenumbering{gobble}      %remove page numbers (and reset to 1)\n\\pagestyle{plain}           %remove page numbers\n\\setlength{\\parindent}{0pt} %no indenting of first line\n\n\\usepackage[inner=2.5cm, outer=2cm, top=2cm, bottom=2cm]{geometry}%showframe\n\\usepackage{pdflscape} \n%pdflscape only turns page, but does not ajdust frame\n%fix from http://tex.stackexchange.com/a/116521\n%fix must come AFTER geometry and pdflscape package\n\\makeatletter\n  \\newcommand*{\\gmshow@textheight}{\\textheight}\n  \\newdimen\\gmshow@@textheight\n  \\g@addto@macro\\landscape{%\n    \\gmshow@@textheight=\\hsize\n    \\renewcommand*{\\gmshow@textheight}{\\gmshow@@textheight}%\n  }\n  \\def\\Gm@vrule{%\n    \\vrule width 0.2pt height\\gmshow@textheight depth\\z@\n  }%\n\\makeatother\n\n%\\usepackage{graphicx}           %for jpg, pdf, ... not used \n\\usepackage{colortbl, xcolor}    %colorbtl used to highlight monthly overview\n\\definecolor{textgray}{gray}{0.40}\n\\definecolor{framegray}{gray}{0.60}\n\\definecolor{lightgray}{gray}{0.90}\n\n\\usepackage{lmodern}  % or any other vector / postscript font (required by tcolorbox)\n%fix for font size smaller than tiny (http://tex.stackexchange.com/a/57676/62746)\n%requires lmodern or comparable font \n\\newcommand{\\supertiny}[1]{{\\fontsize{4}{5.5}\\selectfont #1}} \n\\usepackage{fontawesomeupdated} %for fontawesome glyph icons (github on cover)\n\\usepackage{metalogo} %for \\XeLaTeX symbol\n\\usepackage[hidelinks]{hyperref} %for (web)links\n\n\\usepackage{tikz}               %for monthly overview with rounded corners\n\\usepackage{adjustbox}          %for scaling overview table to page height and width\n\n\\usepackage[most]{tcolorbox}    %for weekly overview (fitting text into box) \n% Settings for all tcolorboxes \n\\tcbset{bicolor, colback=white, colframe=gray, coltext=gray,  arc=1mm, \n    boxsep=0pt, left=2mm,right=2mm, top=2mm, bottom=0mm, \n\t\tboxrule=0.1mm,\n\t\tbefore=\\noindent,after=\\par\\nointerlineskip}\n% Defining separate tcolorboxes\n\\newtcolorbox{headerbox}{\n  \theight=2em, \n    boxrule=0.0mm, \n    frame hidden}\n\\newtcolorbox{weekdaybox}{\n\t\theight=(\\textheight-2em)/3, \n    %minpage set-up from http://tex.stackexchange.com/a/220141/62746\n    before upper ={ \\begin{minipage}[t][\\dimexpr(\\textheight-8em)/3\\relax]{\n                    \\linewidth}},\n    after upper = {\\end{minipage}}}\n\\newtcolorbox{weekendbox}{\n\t\theight=(\\textheight-2em)/6,\n    sidebyside, sidebyside gap=6mm, lower separated=false}\n\\newtcolorbox{notebox}{\n\t\theight=(\\textheight-2em)/6}\n    \n\n% Master-Child structure from: \n% https://github.com/yihui/knitr-examples/blob/master/020-for-loop.Rnw\n%https://github.com/yihui/knitr-examples/blob/master/020-for-template.rnw\n<<master, include=FALSE>>=\n################################################################################\n## Cusomizable input ###########################################################\n################################################################################\nstart <- \"01.07.2015\" # any date around which the agenda should begin (dd.mm.yyyy)\nmonthly_pages <- 3 # number of pages for the monthly overview (1 page = 6 months)\n\nday_start <- 7\nday_end <- 21\n\n################################################################################\n## Set-Up, packages, and custom functions ######################################\n################################################################################\ninvisible(Sys.setlocale(\"LC_ALL\",\"English\"))\n\nlibrary(dplyr)\nlibrary(reshape2)\nlibrary(lubridate)\n\n# from Hadley's comment on http://stackoverflow.com/a/6669237/4798582: \nsafe.ifelse <- function(cond, yes, no) {\n  structure(ifelse(cond, yes, no), class = class(yes))\n}\n\n# prevbestmonday returns next best Monday \n# (in the past if day unequal to Monday,\n#  therefore the name: prev(ious) best monday)\nprevbestmonday <- function(day)   { #requires lubridate\n  # logic for safe.ifelse statement (custom function by Hadley):\n  #   2 --> -0 already Mon   \n  #   3 --> -1 #Tue\n  #   4 --> -2 #Wed\n  #   5 --> -3 #Thu\n  #   6 --> -4 #Fri\n  #   7 --> -5 #Sat\n  #   \n  #   1 --> -6 #Sun\n  Mo <- safe.ifelse(wday(day) == 1, day - days(6),  #Sunday\n                    day - days( wday(day)-2 )) #other days\n  Mo <- paste(day(Mo), month(Mo), year(Mo), sep=\".\")\n  Mo <- dmy(Mo)\n  Mo\n}\n\n\n# nextbestsunday returns next best Sunday \n# (in the future if day unequal to Sunday)\nnextbestsunday <- function(day)   { #requires lubridate\n  # logic for safe.ifelse statement (custom function by Hadley):\n  #   2 --> +6# Mon  \n  #   3 --> +5 #Tue\n  #   4 --> +4 #Wed\n  #   5 --> +3 #Thu\n  #   6 --> +2 #Fri\n  #   7 --> +1 #Sat\n  #   \n  #   1 #already Sun\n  Sun <- safe.ifelse( wday(day) == 1, day, #Sunday\n                      day + (days(8) - days( wday(day))))  #other days\n  Sun <- paste(day(Sun), month(Sun), year(Sun), sep=\".\")\n  Sun <- dmy(Sun)\n  Sun \n}\n\n\n################################################################################\n## Formatting the hourly range #################################################\n################################################################################\nhours <- day_start : day_end\nhours[hours < 10] <- paste0(\"0\",hours[hours < 10])\nhours <- paste0(\"$\", hours, \"^{00}$\", collapse=\"\\\\\\\\\\n\")\nhours <- paste0(hours,\"\\\\\\\\\\n\")\n\n\n################################################################################\n## Calculating start and end dates #############################################\n################################################################################\n# Convert start into date and extract year and month \nstart <- dmy(start)\nstart_month <- month(start)\nstart_year <- year(start)\n\n# Find the first and last date for the monthly overview \nmonthly_start <- paste(\"01\", start_month, start_year, sep=\".\")\nmonthly_start <- dmy(monthly_start)\nmonthly_length <- paste(monthly_pages*6, \"months\")\nmonthly_end <- seq.Date(as.Date(monthly_start), \n                        length=2, \n                        by=monthly_length\n                        )[2] - 1\nmonthly_end <- ymd(monthly_end)\n\n# Find first and last date for the weekly overview\nweekly_start <- prevbestmonday(start)\nweekly_end <- nextbestsunday(monthly_end) \n\n\n################################################################################\n## Calculating the dates for the weekly overview ###############################\n################################################################################\n#abbreviations: https://stat.ethz.ch/R-manual/R-devel/library/base/html/strptime.html\nweekly_range <- seq(weekly_start, weekly_end, \"days\")\nweekly_dates <- format(weekly_range, \"%d.%m\") #31.01\nweekly_days <- format(weekly_range, \"%A\")     #Monday\nweekly_weeks <- format(weekly_range,\"%W\") #1\nweekly_months <- format(weekly_range, \"%B\")   #January\nweekly_years <- format(weekly_range, \"%Y\")    #2015\n#weekly_wknds  <- ifelse(wday(weekly_range) %in% c(7,1), TRUE, FALSE)  #weekends\nweekly_df <- data.frame(weekly_dates, \n                         weekly_days, \n                         weekly_weeks, \n                        #weekly_wknds\n                         weekly_months, \n                         weekly_years)\n# remove weekly_ from column names\ncolnames(weekly_df) <- gsub(\".*\\\\_\",\"\",colnames(weekly_df))  \n\n\n################################################################################\n## Calculating the dates for the monthly overview ##############################\n################################################################################\nmonthly_range <- seq(monthly_start, monthly_end, \"days\") \nmonthly_dates <- format(monthly_range, \"%d\")    #31 \n# monthly_days <- format(monthly_range, \"%a\")     #Mon  \n# monthly_wknds <- ifelse(wday(monthly_range) %in% c(7,1), TRUE, FALSE) #weekends\n# monthly_weeks <- format(monthly_range,\"%W\") #1\n# monthly_months <- format(monthly_range, \"%B\")   #January\n# monthly_years <- format(monthly_range, \"%Y\")    #2015\nmonthly_dayweek <- format(monthly_range, \"%d %a.%W\") \n#dayweek will be split later into |Day Weekday| and |Weeknumbers|\n#probably not the cleanest way of doing that, but this way I only have to\n#format one data.frame and can extract the values into 2 data.frames once \n#that is done\nmonthly_monthyear <- format(monthly_range, \"%B %Y\")\nmonthly_df <- data.frame(monthly_dates, \n                         # monthly_days, \n                         # monthly_weeks, \n                         # monthly_months, \n                         # monthly_years,\n                         # monthly_wknds\n                         monthly_dayweek,\n                         monthly_monthyear)\n# remove monthly_ from column names\ncolnames(monthly_df) <- gsub(\".*\\\\_\",\"\",colnames(monthly_df)) \n\n\n################################################################################\n## Creating the monthly overview ###############################################\n################################################################################\noverview <- dcast(monthly_df, dates ~ monthyear, value.var=\"dayweek\")\noverview <- overview[,-1] #remove dates variable after casting\n\n# Sort columns for display\noverview_names <- dmy(paste(\"01\",names(overview)))\noverview_names <- sort(overview_names)\noverview_names <- format(overview_names, \"%B %Y\")\noverview <- overview[factor(overview_names)]\n#setcolorder(setDT(overview), overview_names) #requires (data.table)\n\n# Interlude: save date range for title page\ntitle_range <- paste(colnames(overview)[c(1, length(colnames(overview)))], \n                     collapse=\" - \")\n\n# Remove year from column names, except for \n# first months in overview (keepyear) and for Januaries (indexed with grepl)\nkeepyear <- seq(1,length(colnames(overview)), by=7)\nkeepyear <- keepyear - 0: (length(keepyear)-1)\ncolnames(overview)[-keepyear][!grepl(\"January\", names(overview)[-keepyear])] <- gsub(\n  '([A-z]+) .*', \n  '\\\\1', \n  colnames(overview)[-keepyear])[!grepl(\"January\", names(overview)[-keepyear])]\n\n# Split overview into weeknumbers (overview_wknrs) and days + weekdays (overview) \n# Important: since I overwrite \"overview\" in the second line below, overview_wknrs\n# must be created first. Might make that neater sometime (i.e., use different names)\noverview_wknrs <- apply(overview, 1:2, function(x) gsub(\".*\\\\.\",\"\",x))\noverview <- apply(overview, 1:2, function(x) gsub(\"\\\\..*\",\"\",x))\n\n## Weekends in overview\nwknds <- apply(overview, 1:2, function(x) grepl(\"(Sat)|(Sun)\", x))\n\n## Mondays in overview (weeknumbers will be inserted at Mondays)\nMondays <- apply(overview, 1:2, function(x) grepl(\"(Mon)\",x))\n\n\n################################################################################\n## Overview Child ##############################################################\n################################################################################\nd <- 1:ncol(overview)\nmax <- 6\nx <- seq_along(d)\nd1 <- split(d, ceiling(x/max))\nmonthc <- NULL\nfor (i in d1) monthc <- c(monthc, knit_child('calendarChildOverview.Rnw'))\n\n################################################################################\n## Weekly Child ################################################################\n################################################################################\nweek = NULL\na <- 1:nrow(weekly_df) \nb <- seq.int(1L, length(a), 7L)\n#b <- c(1,8) #for testing\nfor (i in b) {week = c(week, knit_child('calendarChild.Rnw'))}\n#change for loop http://yihui.name/en/2010/10/on-the-gory-loops-in-r/\n@\n\n\\usepackage{listings} \n\\def\\lsin{\\lstinline[basicstyle=\\ttfamily,breaklines=true,]}%for inline verbatim\n\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%%%%% Main Document %%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\\begin{document}\n\n% Title page\n\\begin{titlepage}\n\\title{\\parbox{\\linewidth}{%http://tex.stackexchange.com/a/63385/62746\n  \\centering%\n  Agenda\\endgraf\n  \\Sexpr{title_range}\\endgraf\\bigskip\n  Created with \\lsin{knitR} and \\XeLaTeX\n  }\n}\n\\author{\\parbox{\\linewidth}{%http://tex.stackexchange.com/a/63385/62746\n  \\centering%\n  Florian Wanders\\endgraf\\bigskip\n  \\href{https://github.com/FlorianWanders/agenda}{\\faGithub~florianwanders/agenda}\n  }\n}\n\\date{}\n\\maketitle\n\\end{titlepage}\n\n% Monthly overview\n\\begin{landscape}\n\\Sexpr{paste0(monthc)}\n\\end{landscape}\n\n% Weekly overview\n\\Sexpr{paste0(week)}\n\n\\end{document}",
    "created" : 1436729340637.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2570277316",
    "id" : "D0BAC96D",
    "lastKnownWriteTime" : 1438628861,
    "path" : "~/UvA/knitr/calendar1/calendarMaster.Rnw",
    "project_path" : "calendarMaster.Rnw",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "sweave"
}